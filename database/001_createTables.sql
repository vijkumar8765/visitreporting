DROP TABLE IF EXISTS BUSINESS_AREA
;
DROP TABLE IF EXISTS BUSINESS_AREA_BRAND
;
DROP TABLE IF EXISTS BUSINESS_AREA_ORGANISATION
;
DROP TABLE IF EXISTS DRAFT_DOCUMENT_DELETION_RULE
;
DROP TABLE IF EXISTS GEOGRAPHICAL_AREA
;
DROP TABLE IF EXISTS GEOGRAPHICAL_REGION
;
DROP TABLE IF EXISTS GEOGRAPHICAL_STRUCTURE_CATEGORY
;
DROP TABLE IF EXISTS KPI
;
DROP TABLE IF EXISTS KPI_BRAND
;
DROP TABLE IF EXISTS KPI_BUSINESS_AREA
;
DROP TABLE IF EXISTS KPI_BUSINESS_RULE
;
DROP TABLE IF EXISTS KPI_CATEGORY
;
DROP TABLE IF EXISTS MESSAGE_BOARD_NOTIFICATION_RULE
;
DROP TABLE IF EXISTS MESSAGE_BOARD_NOTIFICATION_RULE_RECIPIENT
;
DROP TABLE IF EXISTS ORGANISATION
;
DROP TABLE IF EXISTS ORGANISATION_BRAND
;
DROP TABLE IF EXISTS ORGANISATION_FUNCTION
;
DROP TABLE IF EXISTS ORGANISATION_LEVEL
;
DROP TABLE IF EXISTS POSITION_BRAND
;
DROP TABLE IF EXISTS POSITIONS
;
DROP TABLE IF EXISTS SHARING_RULE
;
DROP TABLE IF EXISTS STANDARD_TOPIC
;
DROP TABLE IF EXISTS STANDARD_TOPIC_BRAND
;
DROP TABLE IF EXISTS STANDARD_TOPIC_BUSINESS_AREA
;
DROP TABLE IF EXISTS STANDARD_TOPIC_REF
;
DROP TABLE IF EXISTS USER_PROFILE
;
DROP TABLE IF EXISTS USER_PROFILE_FUNCTION
;
CREATE TABLE BUSINESS_AREA
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
	NAME VARCHAR(100) NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE BUSINESS_AREA_BRAND
(
	BUSINESS_AREA_ID INTEGER NOT NULL,
	BRAND_ID INTEGER NOT NULL,
	PRIMARY KEY (BUSINESS_AREA_ID, BRAND_ID)
) 
;
CREATE TABLE BUSINESS_AREA_ORGANISATION
(
	BUSINESS_AREA_ID INTEGER NOT NULL,
	ORGANISATION_ID INTEGER NOT NULL,
	PRIMARY KEY (BUSINESS_AREA_ID, ORGANISATION_ID)
) 
;
CREATE TABLE DRAFT_DOCUMENT_DELETION_RULE
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
	ORGANISATION_ID INTEGER NOT NULL,
	BRAND_ID INTEGER,
	DOCUMENT_TYPE INTEGER NOT NULL,
	DELETION_DAYS SMALLINT NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE GEOGRAPHICAL_AREA
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
	DESCRIPTION VARCHAR(100) NOT NULL,
	GEOGRAPHICAL_REGION_ID INTEGER NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE GEOGRAPHICAL_REGION
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	DESCRIPTION VARCHAR(100) NOT NULL,
	GEOGRAPHICAL_STRUCTURE_CATEGORY_ID INTEGER NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE GEOGRAPHICAL_STRUCTURE_CATEGORY
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	ORGANISATION_ID INTEGER NOT NULL,
	BRAND_ID INTEGER,
	NAME VARCHAR(50) NOT NULL,
	IS_DEFAULT TINYINT,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE KPI
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	ORGANISATION_ID INTEGER NOT NULL,
	KPI_CATEGORY_ID INTEGER,
	KPI_DESCRIPTION VARCHAR(100) NOT NULL,
	EFFECTIVE_START_DATE DATE NOT NULL,
	EFFECTIVE_END_DATE DATE NOT NULL,
	STATUS INTEGER,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATE,
	NEW_STATUS INTEGER,
	NEW_STATUS_EFFECTIVE_DATE DATE,
	IS_PERCENTAGE TINYINT,
	DISPLAY_SEQUENCE SMALLINT,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE KPI_BRAND
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	KPI_ID BIGINT NOT NULL,
	BRAND_ID INTEGER NOT NULL,
	BENCHMARK_FIGURE FLOAT(4) NOT NULL,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE KPI_BUSINESS_AREA
(
	KPI_ID BIGINT NOT NULL,
	BUSINESS_AREA_ID INTEGER NOT NULL,
	PRIMARY KEY (KPI_ID, BUSINESS_AREA_ID)
) 
;
CREATE TABLE KPI_BUSINESS_RULE
(
	ID INTEGER NOT NULL,
	KPI_ID BIGINT NOT NULL,
	BRAND_ID INTEGER,
	BUSINESS_RULE VARCHAR(100) NOT NULL,
	VARIANCE_COLOUR INTEGER,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE KPI_CATEGORY
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(100) NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE MESSAGE_BOARD_NOTIFICATION_RULE
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	NOTIFICATION_TYPE INTEGER NOT NULL,
	ORGANISATION_ID INTEGER,
	BRAND_ID INTEGER,
	ITEM_TYPE INTEGER NOT NULL,
	BUSINESS_RULE VARCHAR(255) NOT NULL,
	NOTIFICATION_DESCRIPTION VARCHAR(255) NOT NULL,
	STATUS INTEGER,
	VISIBILITY_TIMING_RULE VARCHAR(255) NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE MESSAGE_BOARD_NOTIFICATION_RULE_RECIPIENT
(
	MESSAGE_BOARD_NOTIFICATION_RULE_ID BIGINT NOT NULL,
	RECIPIENT_USER_ID VARCHAR(50) NOT NULL,
	PRIMARY KEY (MESSAGE_BOARD_NOTIFICATION_RULE_ID, RECIPIENT_USER_ID)
) 
;
CREATE TABLE ORGANISATION
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE ORGANISATION_BRAND
(
	ORGANISATION_ID INTEGER NOT NULL,
	BRAND_ID INTEGER NOT NULL,
	PRIMARY KEY (ORGANISATION_ID, BRAND_ID)
) 
;
CREATE TABLE ORGANISATION_FUNCTION
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	ORGANISATION_ID INTEGER NOT NULL,
	BRAND_ID INTEGER,
	FUNCTION INTEGER NOT NULL,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE ORGANISATION_LEVEL
(
	ORGANISATION_ID INTEGER NOT NULL,
	LEVEL INTEGER NOT NULL,
	PRIMARY KEY (ORGANISATION_ID, LEVEL)
) 
;
CREATE TABLE POSITION_BRAND
(
	POSITION_ID INTEGER NOT NULL,
	BRAND_ID INTEGER NOT NULL,
	PRIMARY KEY (POSITION_ID, BRAND_ID)
) 
;
CREATE TABLE POSITIONS
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	DESCRIPTION VARCHAR(100) NOT NULL,
	IS_DISABLED TINYINT NOT NULL,
	VISIBLE_WITHIN_CONTACT_SCREEN TINYINT NOT NULL,
	LEVEL INTEGER NOT NULL,
	POSITION_SEQUENCE INTEGER,
	ORGANISATION_ID INTEGER NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	BRANDCODE INTEGER NOT NULL,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE SHARING_RULE
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	ROOT_ORGANISATION_ID INTEGER NOT NULL,
	ROOT_BRAND_ID INTEGER,
	TARGET_ORGANISATION_ID INTEGER NOT NULL,
	TARGET_BRAND_ID INTEGER,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE STANDARD_TOPIC
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	ORGANISATION_ID INTEGER,
	STANDARD_TOPIC_REF_ID INTEGER NOT NULL,
	STANDARD_TOPIC_REF_TYPE INTEGER NOT NULL,
	EFFECTIVE_START_DATE DATE NOT NULL,
	EFFECTIVE_END_DATE DATE,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE STANDARD_TOPIC_BRAND
(
	STANDARD_TOPIC_ID INTEGER NOT NULL,
	BRAND_ID INTEGER NOT NULL,
	PRIMARY KEY (STANDARD_TOPIC_ID, BRAND_ID)
) 
;
CREATE TABLE STANDARD_TOPIC_BUSINESS_AREA
(
	STANDARD_TOPIC_ID INTEGER NOT NULL,
	BUSINESS_AREA_ID INTEGER NOT NULL,
	PRIMARY KEY (STANDARD_TOPIC_ID, BUSINESS_AREA_ID)
) 
;
CREATE TABLE STANDARD_TOPIC_REF
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	TITLE VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(255) NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE USER_PROFILE
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE USER_PROFILE_FUNCTION
(
	PROFILE_ID INTEGER NOT NULL,
	FUNCTION INTEGER NOT NULL,
	PRIMARY KEY (PROFILE_ID, FUNCTION)
) 
;
ALTER TABLE BUSINESS_AREA_BRAND ADD CONSTRAINT FK_BUSINESS_AREA_BRAND_BUSINESS_AREA 
	FOREIGN KEY (BUSINESS_AREA_ID) REFERENCES BUSINESS_AREA (ID)
;
ALTER TABLE BUSINESS_AREA_ORGANISATION ADD CONSTRAINT FK_BUSINESS_AREA_ORGANISATION_BUSINESS_AREA 
	FOREIGN KEY (BUSINESS_AREA_ID) REFERENCES BUSINESS_AREA (ID)
;
ALTER TABLE BUSINESS_AREA_ORGANISATION ADD CONSTRAINT FK_BUSINESS_AREA_ORGANISATION_ORGANISATION 
	FOREIGN KEY (ORGANISATION_ID) REFERENCES ORGANISATION (ID)
;
ALTER TABLE DRAFT_DOCUMENT_DELETION_RULE ADD CONSTRAINT FK_DRAFT_DOCUMENT_DELETION_RULE_ORGANISATION 
	FOREIGN KEY (ORGANISATION_ID) REFERENCES ORGANISATION (ID)
;
ALTER TABLE GEOGRAPHICAL_AREA ADD CONSTRAINT FK_GEOGRAPHICAL_AREA_GEOGRAPHICAL_REGION 
	FOREIGN KEY (GEOGRAPHICAL_REGION_ID) REFERENCES GEOGRAPHICAL_REGION (ID)
;
ALTER TABLE GEOGRAPHICAL_REGION ADD CONSTRAINT FK_GEOGRAPHICAL_REGION_GEOGRAPHICAL_STRUCTURE_CATEGORY 
	FOREIGN KEY (GEOGRAPHICAL_STRUCTURE_CATEGORY_ID) REFERENCES GEOGRAPHICAL_STRUCTURE_CATEGORY (ID)
;
ALTER TABLE GEOGRAPHICAL_STRUCTURE_CATEGORY ADD CONSTRAINT FK_GEOGRAPHICAL_STRUCTURE_CATEGORY_ORGANISATION 
	FOREIGN KEY (ORGANISATION_ID) REFERENCES ORGANISATION (ID)
;
ALTER TABLE KPI ADD CONSTRAINT FK_KPI_KPI_CATEGORY 
	FOREIGN KEY (KPI_CATEGORY_ID) REFERENCES KPI_CATEGORY (ID)
;
ALTER TABLE KPI ADD CONSTRAINT FK_KPI_ORGANISATION 
	FOREIGN KEY (ORGANISATION_ID) REFERENCES ORGANISATION (ID)
;
ALTER TABLE POSITIONS ADD CONSTRAINT FK_POSITIONS_ORGANISATION 
	FOREIGN KEY (ORGANISATION_ID) REFERENCES ORGANISATION (ID)
;
ALTER TABLE POSITIONS ADD CONSTRAINT UC_POSITIONS 
	UNIQUE (DESCRIPTION, ORGANISATION_ID, BRANDCODE)
;
ALTER TABLE KPI_BRAND ADD CONSTRAINT FK_KPI_BRAND_KPI 
	FOREIGN KEY (KPI_ID) REFERENCES KPI (ID)
;
ALTER TABLE KPI_BUSINESS_AREA ADD CONSTRAINT FK_KPI_BUSINESS_AREA_BUSINESS_AREA 
	FOREIGN KEY (BUSINESS_AREA_ID) REFERENCES BUSINESS_AREA (ID)
;
ALTER TABLE KPI_BUSINESS_AREA ADD CONSTRAINT FK_KPI_BUSINESS_AREA_KPI 
	FOREIGN KEY (KPI_ID) REFERENCES KPI (ID)
;
ALTER TABLE KPI_BUSINESS_RULE ADD CONSTRAINT FK_KPI_BUSINESS_RULE_KPI 
	FOREIGN KEY (KPI_ID) REFERENCES KPI (ID)
;
ALTER TABLE MESSAGE_BOARD_NOTIFICATION_RULE ADD CONSTRAINT FK_MESSAGE_BOARD_NOTIFICATION_RULE_ORGANISATION 
	FOREIGN KEY (ORGANISATION_ID) REFERENCES ORGANISATION (ID)
;
ALTER TABLE MESSAGE_BOARD_NOTIFICATION_RULE_RECIPIENT ADD CONSTRAINT FK_MESSAGE_BOARD_NOTIFICATION_RULE_RECIPIENT_MESSAGE_BOARD_NOTIFICATION_RULE 
	FOREIGN KEY (MESSAGE_BOARD_NOTIFICATION_RULE_ID) REFERENCES MESSAGE_BOARD_NOTIFICATION_RULE (ID)
;
ALTER TABLE ORGANISATION_BRAND ADD CONSTRAINT FK_ORGANISATION_BRAND_ORGANISATION 
	FOREIGN KEY (ORGANISATION_ID) REFERENCES ORGANISATION (ID)
;
ALTER TABLE ORGANISATION_FUNCTION ADD CONSTRAINT FK_ORGANISATION_FUNCTION_ORGANISATION 
	FOREIGN KEY (ORGANISATION_ID) REFERENCES ORGANISATION (ID)
;
ALTER TABLE ORGANISATION_LEVEL ADD CONSTRAINT FK_ORGANISATION_LEVEL_ORGANISATION 
	FOREIGN KEY (ORGANISATION_ID) REFERENCES ORGANISATION (ID)
;
ALTER TABLE POSITION_BRAND ADD CONSTRAINT FK_POSITION_BRAND_POSITION 
	FOREIGN KEY (POSITION_ID) REFERENCES POSITIONS (ID)
;
ALTER TABLE SHARING_RULE ADD CONSTRAINT FK_SHARING_RULE_ORGANISATION 
	FOREIGN KEY (ROOT_ORGANISATION_ID) REFERENCES ORGANISATION (ID)
;
ALTER TABLE SHARING_RULE ADD CONSTRAINT FK_SHARING_RULE_ORGANISATION2 
	FOREIGN KEY (TARGET_ORGANISATION_ID) REFERENCES ORGANISATION (ID)
;
ALTER TABLE STANDARD_TOPIC ADD CONSTRAINT FK_STANDARD_TOPIC_ORGANISATION 
	FOREIGN KEY (ORGANISATION_ID) REFERENCES ORGANISATION (ID)
;
ALTER TABLE STANDARD_TOPIC ADD CONSTRAINT FK_STANDARD_TOPIC_STANDARD_TOPIC_REF 
	FOREIGN KEY (STANDARD_TOPIC_REF_ID) REFERENCES STANDARD_TOPIC_REF (ID)
;
ALTER TABLE STANDARD_TOPIC_BRAND ADD CONSTRAINT FK_STANDARD_TOPIC_BRAND_STANDARD_TOPIC 
	FOREIGN KEY (STANDARD_TOPIC_ID) REFERENCES STANDARD_TOPIC (ID)
;
ALTER TABLE STANDARD_TOPIC_BUSINESS_AREA ADD CONSTRAINT FK_STANDARD_TOPIC_BUSINESS_AREA_BUSINESS_AREA 
	FOREIGN KEY (BUSINESS_AREA_ID) REFERENCES BUSINESS_AREA (ID)
;
ALTER TABLE STANDARD_TOPIC_BUSINESS_AREA ADD CONSTRAINT FK_STANDARD_TOPIC_BUSINESS_AREA_STANDARD_TOPIC 
	FOREIGN KEY (STANDARD_TOPIC_ID) REFERENCES STANDARD_TOPIC (ID)
;
ALTER TABLE USER_PROFILE_FUNCTION ADD CONSTRAINT FK_USER_PROFILE_FUNCTION_USER_PROFILE 
	FOREIGN KEY (PROFILE_ID) REFERENCES USER_PROFILE (ID)
;
DROP TABLE IF EXISTS ADDRESS
;
DROP TABLE IF EXISTS DEALER_KPI_ACTUAL
;
DROP TABLE IF EXISTS DEALER_KPI_TARGET
;
DROP TABLE IF EXISTS DEALERSHIP
;
DROP TABLE IF EXISTS DEALERSHIP_BUSINESS_AREA
;
DROP TABLE IF EXISTS DEALERSHIP_GEOGRAPHICAL_STRUCTURE_AREA
;
DROP TABLE IF EXISTS FRANCHISE_GROUP
;
DROP TABLE IF EXISTS FRANCHISE_GROUP_BRAND
;
DROP TABLE IF EXISTS KPI_SCORE_FILE
;
CREATE TABLE ADDRESS
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	ADDRESS_TYPE INTEGER NOT NULL,
	HOUSE_NUMBER SMALLINT,
	HOUSE_NAME VARCHAR(200),
	STREET_NAME1 VARCHAR(150) NOT NULL,
	STREET_NAME2 VARCHAR(150),
	TOWN VARCHAR(100),
	DISTRICT VARCHAR(100),
	COUNTY VARCHAR(100),
	POST_CODE VARCHAR(20) NOT NULL,
	COUNTRY VARCHAR(50),
	PRIMARY KEY (ID)
) 
;
CREATE TABLE DEALER_KPI_ACTUAL
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	DEALERSHIP_ID INTEGER,
	KPI_ID BIGINT,
	SCORE_MONTH TINYINT,
	SCORE_YEAR SMALLINT,
	DEALER_SCORE FLOAT(4),
	VARIANCE_TOTAL FLOAT(4),
	AREA_SCORE FLOAT(4),
	REGIONAL_SCORE FLOAT(4),
	NATIONAL_ACTUAL_SCORE FLOAT(4),
	NATIONAL_LEAGUE_POSITION SMALLINT,
	TOTAL_ACTUAL_SCORE FLOAT(4),
	PRIMARY KEY (ID)
) 
;
CREATE TABLE DEALER_KPI_TARGET
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	DEALERSHIP_ID INTEGER,
	KPI_ID BIGINT,
	YEAR SMALLINT,
	JANUARY_SCORE FLOAT(5),
	FEBRUARY_SCORE FLOAT(5),
	MARCH_SCORE FLOAT(5),
	APRIL_SCORE FLOAT(5),
	MAY_SCORE FLOAT(5),
	JUNE_SCORE FLOAT(5),
	JULY_SCORE FLOAT(5),
	AUGUST_SCORE FLOAT(5),
	SEPTEMBER_SCORE FLOAT(5),
	OCTOBER_SCORE FLOAT(5),
	NOVEMBER_SCORE FLOAT(5),
	DECEMBER_SCORE FLOAT(5),
	PRIMARY KEY (ID)
) 
;
CREATE TABLE DEALERSHIP
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	BRAND_ID INTEGER NOT NULL,
	DEALER_NUMBER INTEGER NOT NULL,
	DEALER_NAME VARCHAR(200) NOT NULL,
	TRADING_ADDRESS_ID BIGINT NOT NULL,
	FRANCHISE_GROUP_ID INTEGER NOT NULL,
	MAINLINE_TELEPHONE VARCHAR(50),
	FAX_NUMBER VARCHAR(50),
	WEBSITE_LABEL VARCHAR(100),
	WEBSITE_LINK VARCHAR(200),
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_DATE DATETIME,
	MODIFIED_BY VARCHAR(50),
	PRIMARY KEY (ID)
) 
;
CREATE TABLE DEALERSHIP_ADDRESS
(
	DEALERSHIP_ID INTEGER NOT NULL,
	ADDRESS_ID BIGINT NOT NULL,
	PRIMARY KEY (DEALERSHIP_ID, ADDRESS_ID)
) 
;
CREATE TABLE DEALERSHIP_BUSINESS_AREA
(
	DEALERSHIP_ID INTEGER NOT NULL,
	BUSINESS_AREA_ID INTEGER NOT NULL,
	PRIMARY KEY (DEALERSHIP_ID, BUSINESS_AREA_ID)
) 
;
CREATE TABLE DEALERSHIP_GEOGRAPHICAL_STRUCTURE_AREA
(
	GEOGRAPHICAL_AREA_ID INTEGER NOT NULL,
	DEALERSHIP_ID INTEGER NOT NULL,
	PRIMARY KEY (GEOGRAPHICAL_AREA_ID, DEALERSHIP_ID)
) 
;
CREATE TABLE FRANCHISE_GROUP
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	NAME VARCHAR(100) NOT NULL,
        WEBSITE_LABEL VARCHAR(150),
        WEBSITE_LINK VARCHAR(200),
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_DATE DATETIME,
	MODIFIED_BY VARCHAR(50),
	PRIMARY KEY (ID)
) 
;
CREATE TABLE FRANCHISE_GROUP_BRAND
(
	FRANCHISE_GROUP_ID INTEGER NOT NULL,
	BRAND_ID INTEGER NOT NULL,
	PRIMARY KEY (FRANCHISE_GROUP_ID, BRAND_ID)
) 
;
CREATE TABLE KPI_SCORE_FILE
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	FILE_DESCRIPTION VARCHAR(200),
	KPI_FILE_DOCUMENT_ID BIGINT NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
) 
;
ALTER TABLE DEALER_KPI_ACTUAL ADD CONSTRAINT FK_DEALER_KPI_ACTUAL_DEALERSHIP 
	FOREIGN KEY (DEALERSHIP_ID) REFERENCES DEALERSHIP (ID)
;
ALTER TABLE DEALER_KPI_TARGET ADD CONSTRAINT FK_DEALER_KPI_TARGET_DEALERSHIP 
	FOREIGN KEY (DEALERSHIP_ID) REFERENCES DEALERSHIP (ID)
;
ALTER TABLE DEALER_KPI_TARGET ADD CONSTRAINT FK_DEALER_KPI_TARGET_KPI 
	FOREIGN KEY (KPI_ID) REFERENCES KPI (ID)
;
ALTER TABLE DEALERSHIP_ADDRESS ADD CONSTRAINT FK_DEALERSHIP_ADDRESS_ADDRESS 
	FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS (ID)
;
ALTER TABLE DEALERSHIP_ADDRESS ADD CONSTRAINT FK_DEALERSHIP_ADDRESS_DEALERSHIP 
	FOREIGN KEY (DEALERSHIP_ID) REFERENCES DEALERSHIP (ID)
;
ALTER TABLE DEALERSHIP_BUSINESS_AREA ADD CONSTRAINT FK_DEALERSHIP_BUSINESS_AREA_BUSINESS_AREA 
	FOREIGN KEY (BUSINESS_AREA_ID) REFERENCES BUSINESS_AREA (ID)
;
ALTER TABLE DEALERSHIP_BUSINESS_AREA ADD CONSTRAINT FK_DEALERSHIP_BUSINESS_AREA_DEALERSHIP 
	FOREIGN KEY (DEALERSHIP_ID) REFERENCES DEALERSHIP (ID)
;
ALTER TABLE DEALERSHIP_GEOGRAPHICAL_STRUCTURE_AREA ADD CONSTRAINT FK_DEALERSHIP_GEOGRAPHICAL_STRUCTURE_DEALERSHIP 
	FOREIGN KEY (DEALERSHIP_ID) REFERENCES DEALERSHIP (ID)
;
ALTER TABLE DEALERSHIP_GEOGRAPHICAL_STRUCTURE_AREA ADD CONSTRAINT FK_DEALERSHIP_GEOGRAPHICAL_STRUCTURE_GEOGRAPHICAL_AREA 
	FOREIGN KEY (GEOGRAPHICAL_AREA_ID) REFERENCES GEOGRAPHICAL_AREA (ID)
;
ALTER TABLE FRANCHISE_GROUP_BRAND ADD CONSTRAINT FK_FRANCHISE_GROUP_BRAND_FRANCHISE_GROUP 
	FOREIGN KEY (FRANCHISE_GROUP_ID) REFERENCES FRANCHISE_GROUP (ID)
;
DROP TABLE IF EXISTS USER
;
DROP TABLE IF EXISTS USER_BRAND
;
DROP TABLE IF EXISTS USER_BUSINESS_AREA
;
DROP TABLE IF EXISTS USER_GEOGRAPHICAL_AREA
;
DROP TABLE IF EXISTS USER_GEOGRAPHICAL_REGION
;
DROP TABLE IF EXISTS USER_GS_CATEGORY
;
DROP TABLE IF EXISTS USER_USER_PROFILE
;
CREATE TABLE USER
(
	USER_ID VARCHAR(50) NOT NULL,
	TYPE_OF_ORGANISATION INTEGER NOT NULL,
	ORGANISATION_ID INTEGER,
	DEALERSHIP_ID INTEGER,
	FRANCHISE_GROUP_ID INTEGER,
	FIRST_NAME VARCHAR(50) NOT NULL,
	SUR_NAME VARCHAR(50) NOT NULL,
	EMAIL_ADDRESS VARCHAR(100) NOT NULL,
	LANDLINE VARCHAR(50),
	MOBILE VARCHAR(50),
	POSITION_ID INTEGER NOT NULL,
	PASSWORD VARCHAR(15),
	IS_DISABLED TINYINT NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	IS_PASSWORD_CHANGE_REQUIRED TINYINT,
	PRIMARY KEY (USER_ID)
) 
;
CREATE TABLE USER_BRAND
(
	USER_ID VARCHAR(50) NOT NULL,
	BRAND_ID INTEGER NOT NULL,
	PRIMARY KEY (USER_ID, BRAND_ID)
) 
;
CREATE TABLE USER_BUSINESS_AREA
(
	USER_ID VARCHAR(50) NOT NULL,
	BUSINESS_AREA_ID INTEGER NOT NULL,
	PRIMARY KEY (USER_ID, BUSINESS_AREA_ID)
) 
;
CREATE TABLE USER_GEOGRAPHICAL_AREA
(
	USER_ID VARCHAR(50) NOT NULL,
	AREA_ID INTEGER NOT NULL,
	PRIMARY KEY (USER_ID, AREA_ID)
) 
;
CREATE TABLE USER_GEOGRAPHICAL_REGION
(
	USER_ID VARCHAR(50) NOT NULL,
	REGION_ID INTEGER NOT NULL,
	PRIMARY KEY (USER_ID, REGION_ID)
) 
;
CREATE TABLE USER_GS_CATEGORY
(
	USER_ID VARCHAR(50) NOT NULL,
	GS_CATEGORY_ID INTEGER NOT NULL,
	PRIMARY KEY (USER_ID, GS_CATEGORY_ID)
) 
;
CREATE TABLE USER_USER_PROFILE
(
	USER_ID VARCHAR(50) NOT NULL,
	USER_PROFILE_ID INTEGER NOT NULL,
	PRIMARY KEY (USER_ID, USER_PROFILE_ID)
) 
;
ALTER TABLE USER ADD CONSTRAINT FK_USER_DEALERSHIP 
	FOREIGN KEY (DEALERSHIP_ID) REFERENCES DEALERSHIP (ID)
;
ALTER TABLE USER ADD CONSTRAINT FK_USER_FRANCHISE_GROUP 
	FOREIGN KEY (FRANCHISE_GROUP_ID) REFERENCES FRANCHISE_GROUP (ID)
;
ALTER TABLE USER ADD CONSTRAINT FK_USER_ORGANISATION 
	FOREIGN KEY (ORGANISATION_ID) REFERENCES ORGANISATION (ID)
;
ALTER TABLE USER ADD CONSTRAINT FK_USER_POSITION 
	FOREIGN KEY (POSITION_ID) REFERENCES POSITIONS (ID)
;
ALTER TABLE USER_BUSINESS_AREA ADD CONSTRAINT FK_USER_BUSINESS_AREA 
	FOREIGN KEY (BUSINESS_AREA_ID) REFERENCES BUSINESS_AREA (ID)
;
ALTER TABLE USER_GEOGRAPHICAL_AREA ADD CONSTRAINT FK_USER_GEOGRAPHICAL_AREA 
	FOREIGN KEY (AREA_ID) REFERENCES GEOGRAPHICAL_AREA (ID)
;
ALTER TABLE USER_GEOGRAPHICAL_REGION ADD CONSTRAINT FK_USER_GEOGRAPHICAL_REGION 
	FOREIGN KEY (REGION_ID) REFERENCES GEOGRAPHICAL_REGION (ID)
;
ALTER TABLE USER_GS_CATEGORY ADD CONSTRAINT FK_USER_GS_CATEGORY
	FOREIGN KEY (GS_CATEGORY_ID) REFERENCES GEOGRAPHICAL_STRUCTURE_CATEGORY (ID)
;
ALTER TABLE USER_USER_PROFILE ADD CONSTRAINT FK_USER_USER_PROFILE
	FOREIGN KEY (USER_PROFILE_ID) REFERENCES USER_PROFILE (ID)
;
DROP TABLE IF EXISTS ACTION
;
DROP TABLE IF EXISTS ACTION_BUSINESS_AREA
;
DROP TABLE IF EXISTS ACTION_CLOSURE_REQUEST
;
DROP TABLE IF EXISTS ACTION_DEALERSHIP
;
DROP TABLE IF EXISTS ACTION_DOCUMENT
;
DROP TABLE IF EXISTS ACTION_FRANCHISE_GROUP
;
DROP TABLE IF EXISTS ACTION_OWNER
;
DROP TABLE IF EXISTS ACTION_PROCESS
;
DROP TABLE IF EXISTS ACTION_PROGRESS
;
CREATE TABLE ACTION
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	DESCRIPTION VARCHAR(100) NOT NULL,
	BRAND_ID INTEGER,
	STANDARD_TOPIC_ID INTEGER,
	START_DATE DATE,
	DUE_DATE DATE NOT NULL,
	CONFIDENTIAL_FLAG TINYINT,
	ORGANISATION_ID INTEGER,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	STATUS INTEGER,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE ACTION_BUSINESS_AREA
(
	ACTION_ID BIGINT NOT NULL,
	BUSINESS_AREA_ID INTEGER NOT NULL,
	PRIMARY KEY (ACTION_ID, BUSINESS_AREA_ID)
) 
;
CREATE TABLE ACTION_CLOSURE_REQUEST
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	ACTION_ID BIGINT NOT NULL,
	REASON_FOR_CLOSURE_REQUEST VARCHAR(255),
	DATE_OF_CLOSURE_REQUEST DATE NOT NULL,
	REQUESTOR_USER_ID VARCHAR(50) NOT NULL,
	STATUS INTEGER NOT NULL,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE ACTION_DEALERSHIP
(
	ACTION_ID BIGINT NOT NULL,
	DEALERSHIP_ID INTEGER NOT NULL,
	PRIMARY KEY (ACTION_ID, DEALERSHIP_ID)
) 
;
CREATE TABLE ACTION_DOCUMENT
(
	ACTION_ID BIGINT NOT NULL,
	DOCUMENT_ID BIGINT NOT NULL,
	PRIMARY KEY (ACTION_ID, DOCUMENT_ID)
) 
;
CREATE TABLE ACTION_FRANCHISE_GROUP
(
	ACTION_ID BIGINT NOT NULL,
	FRANCHISE_GROUP_ID INTEGER NOT NULL,
	PRIMARY KEY (ACTION_ID, FRANCHISE_GROUP_ID)
) 
;
CREATE TABLE ACTION_OWNER
(
	ACTION_ID BIGINT NOT NULL,
	OWNER_USER_ID VARCHAR(50) NOT NULL,
	PRIMARY KEY (ACTION_ID, OWNER_USER_ID)
) 
;
CREATE TABLE ACTION_PROCESS
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	ACTION_ID BIGINT NOT NULL,
	CLOSURE_REQUEST_ID BIGINT NOT NULL,
	DECISION TINYINT NOT NULL,
	REASON_FOR_REJECTION VARCHAR(255),
	APPROVER_USER_ID VARCHAR(50) NOT NULL,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE ACTION_PROGRESS
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	ACTION_ID BIGINT NOT NULL,
	DESCRIPTION VARCHAR(255) NOT NULL,
	PROGRESS_DATE DATE NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATE NOT NULL,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE ACTION_DUE_DATE_CHANGE
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	ACTION_ID BIGINT NOT NULL,
	NEW_DUE_DATE DATE NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATE NOT NULL,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE ACTION_OWNERSHIP_CHANGE
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	ACTION_ID BIGINT NOT NULL,
	OWNER_USER_ID VARCHAR(50) NOT NULL,
	CHANGE_TYPE TINYINT NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATE NOT NULL,
	PRIMARY KEY (ID)
) 
;
ALTER TABLE ACTION ADD CONSTRAINT FK_ACTION_ORGANISATION 
	FOREIGN KEY (ORGANISATION_ID) REFERENCES ORGANISATION (ID)
;
ALTER TABLE ACTION ADD CONSTRAINT FK_ACTION_STANDARD_TOPIC 
	FOREIGN KEY (STANDARD_TOPIC_ID) REFERENCES STANDARD_TOPIC (ID)
;
ALTER TABLE ACTION_BUSINESS_AREA ADD CONSTRAINT FK_ACTION_BUSINESS_AREA_ACTION 
	FOREIGN KEY (ACTION_ID) REFERENCES ACTION (ID)
;
ALTER TABLE ACTION_BUSINESS_AREA ADD CONSTRAINT FK_ACTION_BUSINESS_AREA_BUSINESS_AREA 
	FOREIGN KEY (BUSINESS_AREA_ID) REFERENCES BUSINESS_AREA (ID)
;
ALTER TABLE ACTION_CLOSURE_REQUEST ADD CONSTRAINT FK_ACTION_CLOSURE_REQUEST_ACTION 
	FOREIGN KEY (ACTION_ID) REFERENCES ACTION (ID)
;
ALTER TABLE ACTION_DEALERSHIP ADD CONSTRAINT FK_ACTION_DEALERSHIP_ACTION 
	FOREIGN KEY (ACTION_ID) REFERENCES ACTION (ID)
;
ALTER TABLE ACTION_DEALERSHIP ADD CONSTRAINT FK_ACTION_DEALERSHIP_DEALERSHIP 
	FOREIGN KEY (DEALERSHIP_ID) REFERENCES DEALERSHIP (ID)
;
ALTER TABLE ACTION_DOCUMENT ADD CONSTRAINT FK_ACTION_DOCUMENT_ACTION 
	FOREIGN KEY (ACTION_ID) REFERENCES ACTION (ID)
;
ALTER TABLE ACTION_FRANCHISE_GROUP ADD CONSTRAINT FK_ACTION_FRANCHISE_GROUP_ACTION 
	FOREIGN KEY (ACTION_ID) REFERENCES ACTION (ID)
;
ALTER TABLE ACTION_FRANCHISE_GROUP ADD CONSTRAINT FK_ACTION_FRANCHISE_GROUP_FRANCHISE_GROUP 
	FOREIGN KEY (FRANCHISE_GROUP_ID) REFERENCES FRANCHISE_GROUP (ID)
;
ALTER TABLE ACTION_OWNER ADD CONSTRAINT FK_ACTION_OWNER_ACTION 
	FOREIGN KEY (ACTION_ID) REFERENCES ACTION (ID)
;
ALTER TABLE ACTION_PROCESS ADD CONSTRAINT FK_ACTION_PROCESS_ACTION_CLOSURE_REQUEST 
	FOREIGN KEY (CLOSURE_REQUEST_ID) REFERENCES ACTION_CLOSURE_REQUEST (ID)
;
ALTER TABLE ACTION_PROGRESS ADD CONSTRAINT FK_ACTION_PROGRESS_ACTION 
	FOREIGN KEY (ACTION_ID) REFERENCES ACTION (ID)
;
ALTER TABLE ACTION_OWNERSHIP_CHANGE ADD CONSTRAINT FK_ACTION_OWNERSHIP_CHANGE_ACTION 
	FOREIGN KEY (ACTION_ID) REFERENCES ACTION (ID)
;
ALTER TABLE ACTION_DUE_DATE_CHANGE ADD CONSTRAINT FK_ACTION_DUE_DATE_CHANGE_ACTION 
	FOREIGN KEY (ACTION_ID) REFERENCES ACTION (ID)
;
DROP TABLE IF EXISTS AGENDA
;
DROP TABLE IF EXISTS AGENDA_ACTION
;
DROP TABLE IF EXISTS AGENDA_ADHOC_TOPIC
;
DROP TABLE IF EXISTS AGENDA_AOB_ITEM
;
DROP TABLE IF EXISTS AGENDA_BRAND
;
DROP TABLE IF EXISTS AGENDA_BUSINESS_AREA
;
DROP TABLE IF EXISTS AGENDA_DEALER
;
DROP TABLE IF EXISTS AGENDA_DOCUMENT
;
DROP TABLE IF EXISTS AGENDA_INVITEE
;
DROP TABLE IF EXISTS AGENDA_STANDARD_TOPIC
;
DROP TABLE IF EXISTS AGENDA_VERSIONS
;
DROP TABLE IF EXISTS MEETING_TYPE
;
CREATE TABLE AGENDA
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	VISIT_REPORT_ID BIGINT,
	DATE_OF_MEETING DATE,	LOCATION_OF_MEETING VARCHAR(200),
	TITLE_OF_MEETING VARCHAR(200),
	MEETING_START_TIME TIME,
	MEETING_END_TIME TIME,
	MEETING_TYPE_ID INTEGER,
	MEETING_ORGANISER_USER_ID VARCHAR(50),
	CONFIDENTIAL TINYINT,
	STATUS_ID INTEGER,
	CURRENT_VERSION_NUMBER FLOAT(4),
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE AGENDA_ACTION
(
	AGENDA_ID BIGINT NOT NULL,
	ACTION_ID BIGINT NOT NULL,
	PRIMARY KEY (AGENDA_ID, ACTION_ID)
) 
;
CREATE TABLE AGENDA_ADHOC_TOPIC
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	AGENDA_ID BIGINT,
	ADHOC_TOPIC_TITLE VARCHAR(100),
	ADHOC_TOPIC_DESCRIPTION VARCHAR(255)
) 
;
CREATE TABLE AGENDA_AOB_ITEM
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	AGENDA_ID BIGINT,
	AOB_ITEM VARCHAR(255),
	PRIMARY KEY (ID)
) 
;
CREATE TABLE AGENDA_BRAND
(
	AGENDA_ID BIGINT NOT NULL,
	BRAND_ID INTEGER NOT NULL,
	PRIMARY KEY (AGENDA_ID, BRAND_ID)
) 
;
CREATE TABLE AGENDA_BUSINESS_AREA
(
	AGENDA_ID BIGINT NOT NULL,
	BUSINESS_AREA_ID INTEGER NOT NULL,
	PRIMARY KEY (AGENDA_ID, BUSINESS_AREA_ID)
) 
;
CREATE TABLE AGENDA_DEALER
(
	AGENDA_ID BIGINT NOT NULL,
	DEALERSHIP_ID INTEGER NOT NULL,
	PRIMARY KEY (AGENDA_ID, DEALERSHIP_ID)
) 
;
CREATE TABLE AGENDA_DOCUMENT
(
	AGENDA_ID BIGINT NOT NULL,
	DOCUMENT_ID BIGINT NOT NULL,
	PRIMARY KEY (AGENDA_ID, DOCUMENT_ID)
) 
;
CREATE TABLE AGENDA_INVITEE
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	AGENDA_ID BIGINT NOT NULL,
	INVITEE_USER_ID VARCHAR(50),
	INVITEE_NAME VARCHAR(200)
) 
;
CREATE TABLE AGENDA_STANDARD_TOPIC
(
	AGENDA_ID BIGINT NOT NULL,
	STANDARD_TOPIC_ID INTEGER NOT NULL,
	PRIMARY KEY (AGENDA_ID, STANDARD_TOPIC_ID)
) 
;
CREATE TABLE AGENDA_VERSIONS
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	AGENDA_ID BIGINT NOT NULL,
	DOCUMENT_ID BIGINT,
	VERSION FLOAT(3),
	PRIMARY KEY (ID)
) 
;
CREATE TABLE MEETING_TYPE
(
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	NAME VARCHAR(200),
	IS_DISABLED TINYINT NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
)
;
ALTER TABLE AGENDA ADD CONSTRAINT FK_AGENDA_MEETING_TYPE 
	FOREIGN KEY (MEETING_TYPE_ID) REFERENCES MEETING_TYPE (ID)
;
ALTER TABLE AGENDA_ACTION ADD CONSTRAINT FK_AGENDA_ACTION_ACTION 
	FOREIGN KEY (ACTION_ID) REFERENCES ACTION (ID)
;
ALTER TABLE AGENDA_ACTION ADD CONSTRAINT FK_AGENDA_ACTION_AGENDA 
	FOREIGN KEY (AGENDA_ID) REFERENCES AGENDA (ID)
;
ALTER TABLE AGENDA_AOB_ITEM ADD CONSTRAINT FK_AGENDA_AOB_ITEM_AGENDA 
	FOREIGN KEY (AGENDA_ID) REFERENCES AGENDA (ID)
;
ALTER TABLE AGENDA_BRAND ADD CONSTRAINT FK_AGENDA_BRAND_AGENDA 
	FOREIGN KEY (AGENDA_ID) REFERENCES AGENDA (ID)
;
ALTER TABLE AGENDA_BUSINESS_AREA ADD CONSTRAINT FK_AGENDA_BUSINESS_AREA_AGENDA 
	FOREIGN KEY (AGENDA_ID) REFERENCES AGENDA (ID)
;
ALTER TABLE AGENDA_BUSINESS_AREA ADD CONSTRAINT FK_AGENDA_BUSINESS_AREA_BUSINESS_AREA 
	FOREIGN KEY (BUSINESS_AREA_ID) REFERENCES BUSINESS_AREA (ID)
;
ALTER TABLE AGENDA_DEALER ADD CONSTRAINT FK_AGENDA_DEALER_AGENDA 
	FOREIGN KEY (AGENDA_ID) REFERENCES AGENDA (ID)
;
ALTER TABLE AGENDA_DEALER ADD CONSTRAINT FK_AGENDA_DEALER_DEALERSHIP 
	FOREIGN KEY (DEALERSHIP_ID) REFERENCES DEALERSHIP (ID)
;
ALTER TABLE AGENDA_DOCUMENT ADD CONSTRAINT FK_AGENDA_DOCUMENT_AGENDA 
	FOREIGN KEY (AGENDA_ID) REFERENCES AGENDA (ID)
;
ALTER TABLE AGENDA_INVITEE ADD CONSTRAINT FK_AGENDA_INVITEE_AGENDA 
	FOREIGN KEY (AGENDA_ID) REFERENCES AGENDA (ID)
;
ALTER TABLE AGENDA_STANDARD_TOPIC ADD CONSTRAINT FK_AGENDA_STANDARD_TOPIC_AGENDA 
	FOREIGN KEY (AGENDA_ID) REFERENCES AGENDA (ID)
;
ALTER TABLE AGENDA_STANDARD_TOPIC ADD CONSTRAINT FK_AGENDA_STANDARD_TOPIC_STANDARD_TOPIC 
	FOREIGN KEY (STANDARD_TOPIC_ID) REFERENCES STANDARD_TOPIC (ID)
;
ALTER TABLE AGENDA_VERSIONS ADD CONSTRAINT FK_AGENDA_MASTER_AGENDA 
	FOREIGN KEY (AGENDA_ID) REFERENCES AGENDA (ID)
;
DROP TABLE IF EXISTS TOPIC_DISCUSSION_SUMMARY
;
DROP TABLE IF EXISTS VISIT_REPORT
;
DROP TABLE IF EXISTS VISIT_REPORT_ACTION
;
DROP TABLE IF EXISTS VISIT_REPORT_ADHOC_TOPIC
;
DROP TABLE IF EXISTS VISIT_REPORT_AOB_ITEM
;
DROP TABLE IF EXISTS VISIT_REPORT_ATTENDEE
;
DROP TABLE IF EXISTS VISIT_REPORT_BUSINESS_AREA
;
DROP TABLE IF EXISTS VISIT_REPORT_DEALER
;
DROP TABLE IF EXISTS VISIT_REPORT_DOCUMENT
;
DROP TABLE IF EXISTS VISIT_REPORT_INVITEE
;
DROP TABLE IF EXISTS VISIT_REPORT_OBSERVATION
;
DROP TABLE IF EXISTS VISIT_REPORT_STANDARD_TOPIC
;
DROP TABLE IF EXISTS VISIT_REPORT_VERSIONS
;
CREATE TABLE TOPIC_DISCUSSION_SUMMARY
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	SUMMARY_OF_TOPIC_DISCUSSION VARCHAR(255),
	VISIT_REPORT_TOPIC_ID BIGINT,
	VISIT_REPORT_TOPIC_TYPE TINYINT,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE VISIT_REPORT
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	FRANCHISE_GROUP_ID INTEGER,
	LOCATION_OF_MEETING VARCHAR(255) NOT NULL,
	TITLE_OF_MEETING VARCHAR(255) NOT NULL,
	MEETING_START_TIME TIME,
	MEETING_END_TIME TIME,
	MEETING_ORGANISER_USER_ID VARCHAR(50) NOT NULL,
	CONFIDENTIAL TINYINT,
	SUMMARY_OF_DISCUSSION VARCHAR(255) NOT NULL,
	STATUS_ID INTEGER,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	CURRENT_VERSION_NUMBER FLOAT(4),
	PRIMARY KEY (ID)
) 
;
CREATE TABLE VISIT_REPORT_ACTION
(
	VISIT_REPORT_ID BIGINT NOT NULL,
	ACTION_ID BIGINT NOT NULL,
	PRIMARY KEY (VISIT_REPORT_ID, ACTION_ID)
) 
;
CREATE TABLE VISIT_REPORT_ADHOC_TOPIC
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	VISIT_REPORT_ID BIGINT,
	TOPIC_TITLE VARCHAR(255),
	TOPIC_DESCRIPTION VARCHAR(255),
	DISPLAY_SEQUENCE SMALLINT,
	SUMMARY_OF_TOPIC_DISCUSSION VARCHAR(255),
	PRIMARY KEY (ID)
) 
;
CREATE TABLE VISIT_REPORT_AOB_ITEM
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	VISIT_REPORT_ID BIGINT,
	AOB_ITEM VARCHAR(255),
	DISPLAY_SEQUENCE SMALLINT,
	AOB_DISCUSSION VARCHAR(255),
	PRIMARY KEY (ID)
) 
;
CREATE TABLE VISIT_REPORT_ATTENDEE
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	VISIT_REPORT_ID BIGINT NOT NULL,
	ATTENDEE_USER_ID VARCHAR(50),
	ATTENDEE_NAME VARCHAR(200),
	PRIMARY KEY (ID)
) 
;
CREATE TABLE VISIT_REPORT_BUSINESS_AREA
(
	VISIT_REPORT_ID BIGINT NOT NULL,
	BUSINESS_AREA_ID INTEGER NOT NULL,
	PRIMARY KEY (VISIT_REPORT_ID, BUSINESS_AREA_ID)
) 
;
CREATE TABLE VISIT_REPORT_DEALER
(
	VISIT_REPORT_ID BIGINT NOT NULL,
	DEALERSHIP_ID INTEGER NOT NULL,
	PRIMARY KEY (VISIT_REPORT_ID, DEALERSHIP_ID)
) 
;
CREATE TABLE VISIT_REPORT_DOCUMENT
(
	VISIT_REPORT_ID BIGINT NOT NULL,
	DOCUMENT_ID BIGINT NOT NULL,
	PRIMARY KEY (VISIT_REPORT_ID, DOCUMENT_ID)
) 
;
CREATE TABLE VISIT_REPORT_INVITEE
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	VISIT_REPORT_ID BIGINT NOT NULL,
	INVITEE_USER_ID VARCHAR(50),
	INVITEE_NAME VARCHAR(200),
	PRIMARY KEY (ID)
) 
;
CREATE TABLE VISIT_REPORT_OBSERVATION
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	VISIT_REPORT_ID BIGINT,
	OBSERVATION VARCHAR(255),
	PRIMARY KEY (ID)
) 
;
CREATE TABLE VISIT_REPORT_STANDARD_TOPIC
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	VISIT_REPORT_ID BIGINT NOT NULL,
	STANDARD_TOPIC_ID INTEGER NOT NULL,
	DISPLAY_SEQUENCE SMALLINT,
	SUMMARY_OF_TOPIC_DISCUSSION VARCHAR(255),
	PRIMARY KEY (ID)
) 
;
CREATE TABLE VISIT_REPORT_VERSIONS
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	VISIT_REPORT_ID BIGINT NOT NULL,
	VERSION_DOCUMENT_ID BIGINT,
	VERSION FLOAT(4),
	PRIMARY KEY (ID)
) 
;
ALTER TABLE AGENDA ADD CONSTRAINT FK_AGENDA_VISIT_REPORT
	FOREIGN KEY (VISIT_REPORT_ID) REFERENCES VISIT_REPORT (ID)
;
ALTER TABLE VISIT_REPORT_ACTION ADD CONSTRAINT FK_VISIT_REPORT_ACTION_ACTION 
	FOREIGN KEY (ACTION_ID) REFERENCES ACTION (ID)
;
ALTER TABLE VISIT_REPORT_ACTION ADD CONSTRAINT FK_VISIT_REPORT_ACTION_AGENDA 
	FOREIGN KEY (VISIT_REPORT_ID) REFERENCES AGENDA (ID)
;
ALTER TABLE VISIT_REPORT_ADHOC_TOPIC ADD CONSTRAINT FK_VISIT_REPORT_ADHOC_TOPIC_VISIT_REPORT 
	FOREIGN KEY (VISIT_REPORT_ID) REFERENCES VISIT_REPORT (ID)
;
ALTER TABLE VISIT_REPORT_AOB_ITEM ADD CONSTRAINT FK_VISIT_REPORT_AOB_ITEM_AGENDA 
	FOREIGN KEY (VISIT_REPORT_ID) REFERENCES AGENDA (ID)
;
ALTER TABLE VISIT_REPORT_ATTENDEE ADD CONSTRAINT FK_VISIT_REPORT_ATTENDEE_VISIT_REPORT 
	FOREIGN KEY (VISIT_REPORT_ID) REFERENCES VISIT_REPORT (ID)
;
ALTER TABLE VISIT_REPORT_BUSINESS_AREA ADD CONSTRAINT FK_VISIT_REPORT_BUSINESS_AREA_AGENDA 
	FOREIGN KEY (VISIT_REPORT_ID) REFERENCES AGENDA (ID)
;
ALTER TABLE VISIT_REPORT_BUSINESS_AREA ADD CONSTRAINT FK_VISIT_REPORT_BUSINESS_AREA_BUSINESS_AREA 
	FOREIGN KEY (BUSINESS_AREA_ID) REFERENCES BUSINESS_AREA (ID)
;
ALTER TABLE VISIT_REPORT_DEALER ADD CONSTRAINT FK_VISIT_REPORT_DEALER_AGENDA 
	FOREIGN KEY (VISIT_REPORT_ID) REFERENCES AGENDA (ID)
;
ALTER TABLE VISIT_REPORT_DEALER ADD CONSTRAINT FK_VISIT_REPORT_DEALER_DEALERSHIP 
	FOREIGN KEY (DEALERSHIP_ID) REFERENCES DEALERSHIP (ID)
;
ALTER TABLE VISIT_REPORT_DOCUMENT ADD CONSTRAINT FK_VISIT_REPORT_DOCUMENT_VISIT_REPORT 
	FOREIGN KEY (VISIT_REPORT_ID) REFERENCES VISIT_REPORT (ID)
;
ALTER TABLE VISIT_REPORT_INVITEE ADD CONSTRAINT FK_VISIT_REPORT_INVITEE_VISIT_REPORT 
	FOREIGN KEY (VISIT_REPORT_ID) REFERENCES VISIT_REPORT (ID)
;
ALTER TABLE VISIT_REPORT_OBSERVATION ADD CONSTRAINT FK_VISIT_REPORT_OBSERVATION_VISIT_REPORT 
	FOREIGN KEY (VISIT_REPORT_ID) REFERENCES VISIT_REPORT (ID)
;
ALTER TABLE VISIT_REPORT_STANDARD_TOPIC ADD CONSTRAINT FK_VISIT_REPORT_STANDARD_TOPIC_STANDARD_TOPIC 
	FOREIGN KEY (STANDARD_TOPIC_ID) REFERENCES STANDARD_TOPIC (ID)
;
ALTER TABLE VISIT_REPORT_STANDARD_TOPIC ADD CONSTRAINT FK_VISIT_REPORT_STANDARD_TOPIC_VISIT_REPORT 
	FOREIGN KEY (VISIT_REPORT_ID) REFERENCES VISIT_REPORT (ID)
;
ALTER TABLE VISIT_REPORT_VERSIONS ADD CONSTRAINT FK_VISIT_REPORT_MASTER_VISIT_REPORT 
	FOREIGN KEY (VISIT_REPORT_ID) REFERENCES VISIT_REPORT (ID)
;
DROP TABLE IF EXISTS DOCUMENT_CONTEXT
;
DROP TABLE IF EXISTS DOCUMENT
;
CREATE TABLE DOCUMENT_CONTEXT
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	DISPLAY_TEXT VARCHAR(200),
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
) 
;
CREATE TABLE DOCUMENT
(
	DOCUMENT_ID BIGINT NOT NULL,
	DOCUMENT_OBJECT VARBINARY(5000000) NOT NULL,
	PRIMARY KEY (DOCUMENT_ID)
) 
;
ALTER TABLE DOCUMENT ADD CONSTRAINT FK_DOCUMENT_DOCUMENT_CONTEXT 
	FOREIGN KEY (DOCUMENT_ID) REFERENCES DOCUMENT_CONTEXT (ID)
;
DROP TABLE IF EXISTS GENERIC_ACCESS_GRANT
;
CREATE TABLE GENERIC_ACCESS_GRANT
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	USER_ID VARCHAR(50) NOT NULL,
	ENTITY_CLASS_NAME VARCHAR(100) NOT NULL,
	ENTITY_ID BIGINT NOT NULL,
	FUNCTION INTEGER NOT NULL,
	DATE_ACCESS_GRANTED_FROM DATE,
	DATE_ACCESS_GRANTED_UPTO DATE,
	CREATED_BY VARCHAR(50) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	MODIFIED_BY VARCHAR(50),
	MODIFIED_DATE DATETIME,
	PRIMARY KEY (ID)
) 
;
DROP TABLE IF EXISTS TASKEXECUTION
;
DROP TABLE IF EXISTS AUDIT_RECORD
;
DROP TABLE IF EXISTS AUDIT_RECORD_DEALERSHIPS
;
CREATE TABLE TASKEXECUTION
(
	TASKNAME VARCHAR(255) NOT NULL,
	TIME VARCHAR(255) NOT NULL,
	PRIMARY KEY (TASKNAME, TIME)
)
;
CREATE TABLE AUDIT_RECORD
(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	ENTITY_CLASS VARCHAR(250) NOT NULL,
	ENTITY_ID VARCHAR(50) NOT NULL,
	EVENT_TYPE INTEGER NOT NULL,
	PROPERTY_NAME VARCHAR(50),
	USER_ID VARCHAR(50) NOT NULL,
	EVENT_TIMESTAMP DATETIME NOT NULL,
	PRIMARY KEY (ID)
)
;
CREATE TABLE AUDIT_RECORD_DEALERSHIPS
(
	AUDIT_RECORD_ID BIGINT NOT NULL,
	DEALERSHIP_ID INTEGER NOT NULL,
	PRIMARY KEY (AUDIT_RECORD_ID, DEALERSHIP_ID)
)
;
COMMIT;