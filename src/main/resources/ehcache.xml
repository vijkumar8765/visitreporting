<?xml version="1.0" encoding="UTF-8"?>

<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="ehcache.xsd" updateCheck="true" monitoring="autodetect" dynamicConfig="true">

	<!-- Configure each server to communicate cache events (e.g. invalidation) -->
	<cacheManagerPeerProviderFactory
		class="net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory"
		properties="peerDiscovery=manual,
					rmiUrls=//${other.server.hostname}:40001/defaultCache"/>

	<!-- Configure each server to listen for cache events -->
	<cacheManagerPeerListenerFactory
		class="net.sf.ehcache.distribution.RMICacheManagerPeerListenerFactory"
		properties="hostName=localhost,
					port=40001,
					socketTimeoutMillis=2000"/>
	
	<!-- for each cache define which events it will replicate.  In this example, no cache data is replicated only updates (via invalidation) and removals (invalidation also) -->
<!-- 
	<cache
		name="org.hibernate.cache.StandardQueryCache"
-->
	<defaultCache
		maxElementsInMemory="10000"
		eternal="true"
		overflowToDisk="false"
		memoryStoreEvictionPolicy="LRU" 
		statistics="true">
		
		<cacheEventListenerFactory
		    class="net.sf.ehcache.distribution.RMICacheReplicatorFactory"
		    properties="replicateAsynchronously=true,
		    			replicatePuts=false,
		    			replicateUpdates=true,
						replicateUpdatesViaCopy=false,
						replicateRemovals=true "/>
	</defaultCache>
	

</ehcache>